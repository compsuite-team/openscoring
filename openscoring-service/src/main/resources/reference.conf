application {
	// ModelRef converter provider class name
	modelRefConverterProviderClass = "org.openscoring.service.providers.ModelRefConverterProvider"

	// Model provider class name
	modelProviderClass = "org.openscoring.service.providers.ModelProvider"

	// Table provider class name
	tableProviderClass = "org.openscoring.service.providers.TableProvider"

	// List of JAX-RS Component class names that must be registered
	componentClasses = [
		"org.openscoring.service.filters.NetworkSecurityContextFilter"
	]
}

modelEvaluatorBuilder {
	// Model evaluator factory class name
	// Must declare a static newInstance() method or a public default constructor
	modelEvaluatorFactoryClass = "org.jpmml.evaluator.ModelEvaluatorFactory"

	// Value factory factory class name
	// Must declare a static newInstance() method or a public default constructor
	valueFactoryFactoryClass = "org.jpmml.evaluator.ValueFactoryFactory"

	// Should the uploaded PMML documents be validated against the PMML XML Schema Definition (XSD) resource or not?
	// Validation is a one time operation that takes place during model deployment.
	validate = false

	// Should the PMML class model object preserve SAX Locator information or not?
	// SAX Locator information is used for mapping PMML exceptions to PMML document coordinates (good in testing),
	// but increases the memory consumption up to 20-30% (bad in production).
	locatable = false

	// List of Visitor class names that must be applied to the PMML class model object
	visitorClasses = [
		"org.jpmml.evaluator.visitors.ModelEvaluatorVisitorBattery"
	]
}

networkSecurityContextFilter {
	// List of user IP addresses.
	// The "*" string keyword means any IP address.
	userAddresses = ["*"]

	// List of admin IP addresses. 
	// A client that originates from an admin IP address (as indicated by the value of the CGI variable REMOTE_ADDR) is granted the "admin" role.
	// The "localhost" string keyword is expanded into a list of all known IP addresses of the local host.
	adminAddresses = ["localhost"]
}

tokenSecurityContextFilter {
	// User token.
	// The "" string keyword means any string token, including a missing token.
	userToken = ""

	// Admin token.
	// A client that presents an admin token using HTTP cookie or HTTP authorization header is granted "admin" role.
	// The "random" string keyword is expanded into a random alphanumeric string token.
	adminToken = "random"
}